<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Technical Journal Blog</title>
        <link>https://fidelcoria.com/blog</link>
        <description>Technical Journal Blog</description>
        <lastBuildDate>Mon, 06 Dec 2021 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[Custom domain for GitHub Pages]]></title>
            <link>https://fidelcoria.com/blog/2021/12/06/GitHub_Pages</link>
            <guid>Custom domain for GitHub Pages</guid>
            <pubDate>Mon, 06 Dec 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[This website is hosted on GitHub pages. The default domain is alzafacon.github.io since the source code is hosted on a repo of the same name.]]></description>
            <content:encoded><![CDATA[<p>This website is hosted on GitHub pages. The default domain is alzafacon.github.io since the source code is hosted on a repo of the same name. </p><p>I setup a custom domain following the docs:
<a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages">https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages</a></p><p>Here are some clarifications:</p><ul><li><p>You must enter the desired custom domain in the repo settings page before creating any DNS entries</p></li><li><p>The DNS configuration should be as follows (I used namecheap.com)</p></li></ul><pre><code>ALIAS
Host: @
Target: alzafacon.github.io.

CNAME
Host: www
Target: alzafacon.github.io.
</code></pre><p>I also setup alzafacon.com to redirect to fidelcoria.com</p><pre><code>URL Redirect
Host: @
Destination URL: https://fidelcoria.com
Unmasked
</code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[DigiLog - The Single Hand Analog Clock with a Digital Enhancement]]></title>
            <link>https://fidelcoria.com/blog/2021/12/05/DigiLog</link>
            <guid>DigiLog - The Single Hand Analog Clock with a Digital Enhancement</guid>
            <pubDate>Sun, 05 Dec 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[In the past single hand clocks and watches were common, but they were difficult to read precisely. Minute hands were added to address the precision problem.]]></description>
            <content:encoded><![CDATA[<p>In the past single hand clocks and watches were common, but they were difficult to read precisely. Minute hands were added to address the precision problem.</p><p>An alternative approach to improving precision with a single hand is to digitally zoom the clock face.</p><h2>The Math</h2><table><thead><tr><th></th><th>Definitions</th></tr></thead><tbody><tr><td>Viewport</td><td>window on circular clock</td></tr><tr><td><code>R</code></td><td>viewport radius</td></tr><tr><td>Clock face</td><td>the numbers and tick markings as a group</td></tr><tr><td><code>tau</code></td><td>angle of hour hand from pole (3 o&#x27;clock)</td></tr></tbody></table><p>Zooming the clock face means choosing a clock face segment to enlarge. The clock face segment has a chord.</p><p>Let <code>alpha</code> be half the clock face segment angle.</p><p>Zooming is done by scaling the chord to be the viewport diameter.</p><p>Let <code>r</code> be half the chord length, then <code>sin(alpha) = r/R</code>. The scaling factor is <code>R/r = 1/sin(alpha)</code>.</p><p>Let <code>d</code> be the distance from viewport center to chord midpoint before scaling, <code>d = R * cos(alpha)</code>.</p><p>The translation offset in x- and y-direction before scaling are</p><ul><li><code>dx = cos(tau) * d = R * cos(tau) * cos(alpha)</code></li><li><code>dy = sin(tau) * d = R * sin(tau) * cos(alpha)</code></li></ul><p>After scaling</p><ul><li><code>dx&#x27; = R * cos(tau) * cos(alpha) / sin(alpha)</code></li><li><code>dy&#x27; = R * sin(tau) * cos(alpha) / sin(alpha)</code></li></ul><p><code>alpha</code> has interval <code>(0, pi/2]</code>. The left bound is open because <code>alpha = 0</code> means infinite zoom which is not useful to display.</p><p>To avoid the infinite zoom problem we introduce a zoom variable <code>z</code> and a function <code>f: [0, inf) -&gt; [pi/2, 0)</code> that approaches 0 asymptotically.</p><p>The most obvious such function is <code>f(z) = 1 / (z + 2/pi)</code>. An additional advantage of asymptotically approaching 0 is course adjustments at low zoom and fine adjustments at high zoom.</p><p><code>[0, inf)</code> is not practical for input because of <code>inf</code> so it is best to close the right bound. Naturally, the output interval right bound should also be closed at an arbitrary value. One such choice is <code>[0, 100] -&gt; [pi/2, pi/6]</code>. The most obvious such function is <code>g(z) = 1 / (k*z + 2/pi)</code> where the reader can find <code>k</code> as an exercise.</p>]]></content:encoded>
        </item>
    </channel>
</rss>