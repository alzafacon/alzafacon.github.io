"use strict";(self.webpackChunkfidelcoria=self.webpackChunkfidelcoria||[]).push([[520],{2191:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return r},contentTitle:function(){return p},metadata:function(){return d},assets:function(){return s},toc:function(){return m},default:function(){return u}});var n=a(7462),i=a(3366),l=(a(7294),a(3905)),o=["components"],r={},p="DigiLog - Digital re-imagining of a Single Hand Analog Timepiece",d={permalink:"/blog/2021/12/05/DigiLog",editUrl:"https://github.com/alzafacon/alzafacon.github.io/edit/main/website/blog/blog/2021-12-05-DigiLog/index.md",source:"@site/blog/2021-12-05-DigiLog/index.md",title:"DigiLog - Digital re-imagining of a Single Hand Analog Timepiece",description:"Clocks and watches originally had a single hand, but the minutes were hard to read. Thus the minute hand was introduced.",date:"2021-12-05T00:00:00.000Z",formattedDate:"December 5, 2021",tags:[],readingTime:2.385,truncated:!0,authors:[],prevItem:{title:"Custom Apex Domain for GitHub Pages",permalink:"/blog/2021/12/06/GitHub_Pages"}},s={authorsImageUrls:[]},m=[{value:"The Math",id:"the-math",children:[],level:2}],h={toc:m};function u(e){var t=e.components,a=(0,i.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Clocks and watches originally had a single hand, but the minutes were hard to read. Thus the minute hand was introduced."),(0,l.kt)("p",null,"Another way to read the minutes with a single hand is by zooming into the section of the clock where the hour hand points to the time. For example, at 6:30 the tick marks will show the hour hand to be half way between 6 and 7. While at 7:05 you can zoom in to see the tick marks showing 5 minutes past 7."),(0,l.kt)("h2",{id:"the-math"},"The Math"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Definitions"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Viewport"),(0,l.kt)("td",{parentName:"tr",align:null},"window on circular clock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"R")),(0,l.kt)("td",{parentName:"tr",align:null},"viewport radius")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Clock face"),(0,l.kt)("td",{parentName:"tr",align:null},"the numbers and tick markings as a group")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tau")),(0,l.kt)("td",{parentName:"tr",align:null},"angle of hour hand from pole (3 o'clock)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"alpha")),(0,l.kt)("td",{parentName:"tr",align:null},"half the clock face segment angle to be enlarged")))),(0,l.kt)("p",null,"Zooming the clock face means choosing a clock face segment to enlarge. The clock face segment has a chord."),(0,l.kt)("p",null,"Let ",(0,l.kt)("inlineCode",{parentName:"p"},"alpha")," be half the clock face segment angle."),(0,l.kt)("p",null,"Zooming is done by dilating and translating the chord to be the viewport diameter."),(0,l.kt)("p",null,"Let ",(0,l.kt)("inlineCode",{parentName:"p"},"r")," be half the chord length. Therefore ",(0,l.kt)("inlineCode",{parentName:"p"},"r")," must be dilated by a factor of ",(0,l.kt)("inlineCode",{parentName:"p"},"R/r")," to become ",(0,l.kt)("inlineCode",{parentName:"p"},"R")," (i.e. ",(0,l.kt)("inlineCode",{parentName:"p"},"r")," * ",(0,l.kt)("inlineCode",{parentName:"p"},"R/r")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"R"),")."),(0,l.kt)("p",null,"Since ",(0,l.kt)("inlineCode",{parentName:"p"},"sin(alpha) = r/R"),". The scaling factor is ",(0,l.kt)("inlineCode",{parentName:"p"},"R/r = 1/sin(alpha)"),"."),(0,l.kt)("p",null,"Let ",(0,l.kt)("inlineCode",{parentName:"p"},"d")," be the distance from viewport center to chord midpoint before scaling, ",(0,l.kt)("inlineCode",{parentName:"p"},"d = R * cos(alpha)"),"."),(0,l.kt)("p",null,"The translation offsets the in x- and y-direction before scaling are"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dx = cos(tau) * d = R * cos(tau) * cos(alpha)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dy = sin(tau) * d = R * sin(tau) * cos(alpha)"))),(0,l.kt)("p",null,"After scaling"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dx' = R * cos(tau) * cos(alpha) / sin(alpha)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dy' = R * sin(tau) * cos(alpha) / sin(alpha)"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"alpha")," has interval ",(0,l.kt)("inlineCode",{parentName:"p"},"(0, pi/2]"),". The left bound is open because ",(0,l.kt)("inlineCode",{parentName:"p"},"alpha = 0")," means infinite zoom which is not useful to display."),(0,l.kt)("p",null,"To avoid the infinite zoom problem we introduce a zoom variable ",(0,l.kt)("inlineCode",{parentName:"p"},"z")," and a function ",(0,l.kt)("inlineCode",{parentName:"p"},"f(z) = alpha")," where ",(0,l.kt)("inlineCode",{parentName:"p"},"f: [0, inf) -> [pi/2, 0)"),". Notice ",(0,l.kt)("inlineCode",{parentName:"p"},"f(z)")," approaches 0 asymptotically. "),(0,l.kt)("p",null,"The most obvious such function is ",(0,l.kt)("inlineCode",{parentName:"p"},"f(z) = 1 / (z + 2/pi)"),". An additional advantage of asymptotically approaching 0 is course adjustments at low zoom and fine adjustments at high zoom (i.e. the rate of change is greater near ",(0,l.kt)("inlineCode",{parentName:"p"},"z = 0")," and less as ",(0,l.kt)("inlineCode",{parentName:"p"},"z")," approaches ",(0,l.kt)("inlineCode",{parentName:"p"},"inf"),")."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"[0, inf)")," is not practical as an input range because of ",(0,l.kt)("inlineCode",{parentName:"p"},"inf"),". So it is best to close the right bound at an arbitrary value. Naturally, the output interval right bound should also be closed at the desired maximum zoom. One such choice is ",(0,l.kt)("inlineCode",{parentName:"p"},"[0, 100] -> [pi/2, pi/6]"),". The most obvious such function is ",(0,l.kt)("inlineCode",{parentName:"p"},"g(z) = 1 / (k*z + 2/pi)")," where the reader can find ",(0,l.kt)("inlineCode",{parentName:"p"},"k")," as an exercise."))}u.isMDXComponent=!0}}]);